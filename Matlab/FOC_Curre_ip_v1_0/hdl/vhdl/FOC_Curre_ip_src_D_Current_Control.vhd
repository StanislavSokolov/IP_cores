-- -------------------------------------------------------------
-- 
-- File Name: D:\Projects\Matlab\IPcores\test\hdlsrc\hdlcoderFocCurrentFixptHdl\FOC_Curre_ip_src_D_Current_Control.vhd
-- Created: 2023-12-01 13:24:03
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FOC_Curre_ip_src_D_Current_Control
-- Source Path: hdlcoderFocCurrentFixptHdl/FOC_Current_Control/DQ_Current_Control/D_Current_Control
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY FOC_Curre_ip_src_D_Current_Control IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        Current_Command                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En12
        Current_Measured                  :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En27
        paramCurrentControlI              :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En3
        paramCurrentControlP              :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En8
        Voltage                           :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En11
        );
END FOC_Curre_ip_src_D_Current_Control;


ARCHITECTURE rtl OF FOC_Curre_ip_src_D_Current_Control IS

  -- Component Declarations
  COMPONENT FOC_Curre_ip_src_Saturate_Output
    PORT( In_rsvd                         :   IN    std_logic_vector(31 DOWNTO 0);  -- sfix32_En20
          Out_rsvd                        :   OUT   std_logic_vector(31 DOWNTO 0)  -- sfix32_En20
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : FOC_Curre_ip_src_Saturate_Output
    USE ENTITY work.FOC_Curre_ip_src_Saturate_Output(rtl);

  -- Signals
  SIGNAL paramCurrentControlP_signed      : signed(15 DOWNTO 0);  -- sfix16_En8
  SIGNAL Current_Command_signed           : signed(15 DOWNTO 0);  -- sfix16_En12
  SIGNAL Current_Measured_signed          : signed(31 DOWNTO 0);  -- sfix32_En27
  SIGNAL Error_sub_cast                   : signed(32 DOWNTO 0);  -- sfix33_En27
  SIGNAL Error_sub_cast_1                 : signed(32 DOWNTO 0);  -- sfix33_En27
  SIGNAL Error_sub_temp                   : signed(32 DOWNTO 0);  -- sfix33_En27
  SIGNAL currentControlError              : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL Proportional_Gain_mul_temp       : signed(31 DOWNTO 0);  -- sfix32_En19
  SIGNAL currentControlPTerm              : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL paramCurrentControlI_signed      : signed(15 DOWNTO 0);  -- sfix16_En3
  SIGNAL Sample_Time_out1                 : signed(15 DOWNTO 0);  -- sfix16_En30
  SIGNAL Product_mul_temp                 : signed(31 DOWNTO 0);  -- sfix32_En33
  SIGNAL Product_out1                     : signed(15 DOWNTO 0);  -- sfix16_En19
  SIGNAL Product1_mul_temp                : signed(31 DOWNTO 0);  -- sfix32_En30
  SIGNAL Product1_out1                    : signed(31 DOWNTO 0);  -- sfix32_En31
  SIGNAL Zero_out1                        : signed(15 DOWNTO 0);  -- int16
  SIGNAL Zero_out1_dtc                    : signed(31 DOWNTO 0);  -- sfix32_En31
  SIGNAL preSatVoltage                    : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL Voltage_signed                   : signed(31 DOWNTO 0);  -- sfix32_En20
  SIGNAL Not_Equal_relop1                 : std_logic;
  SIGNAL Switch_out1                      : signed(31 DOWNTO 0);  -- sfix32_En31
  SIGNAL currentControlITerm              : signed(31 DOWNTO 0);  -- sfix32_En27
  SIGNAL Add_add_cast                     : signed(36 DOWNTO 0);  -- sfix37_En31
  SIGNAL Add_add_cast_1                   : signed(36 DOWNTO 0);  -- sfix37_En31
  SIGNAL Add_add_temp                     : signed(36 DOWNTO 0);  -- sfix37_En31
  SIGNAL Add_out1                         : signed(31 DOWNTO 0);  -- sfix32_En27
  SIGNAL Saturate_out1                    : signed(31 DOWNTO 0);  -- sfix32_En27
  SIGNAL Add1_add_cast                    : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL Add1_add_cast_1                  : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL Add1_add_temp                    : signed(39 DOWNTO 0);  -- sfix40_En27
  SIGNAL Voltage_1                        : std_logic_vector(31 DOWNTO 0);  -- ufix32
  SIGNAL Data_Type_Convert_out1           : signed(15 DOWNTO 0);  -- sfix16_En11

BEGIN
  u_Saturate_Output : FOC_Curre_ip_src_Saturate_Output
    PORT MAP( In_rsvd => std_logic_vector(preSatVoltage),  -- sfix32_En20
              Out_rsvd => Voltage_1  -- sfix32_En20
              );

  paramCurrentControlP_signed <= signed(paramCurrentControlP);

  Current_Command_signed <= signed(Current_Command);

  Current_Measured_signed <= signed(Current_Measured);

  Error_sub_cast <= resize(Current_Command_signed & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0', 33);
  Error_sub_cast_1 <= resize(Current_Measured_signed, 33);
  Error_sub_temp <= Error_sub_cast - Error_sub_cast_1;
  currentControlError <= Error_sub_temp(31 DOWNTO 16);

  Proportional_Gain_mul_temp <= paramCurrentControlP_signed * currentControlError;
  currentControlPTerm <= Proportional_Gain_mul_temp(30 DOWNTO 0) & '0';

  paramCurrentControlI_signed <= signed(paramCurrentControlI);

  Sample_Time_out1 <= to_signed(16#53E3#, 16);

  Product_mul_temp <= paramCurrentControlI_signed * Sample_Time_out1;
  Product_out1 <= Product_mul_temp(29 DOWNTO 14);

  Product1_mul_temp <= currentControlError * Product_out1;
  Product1_out1 <= Product1_mul_temp(30 DOWNTO 0) & '0';

  Zero_out1 <= to_signed(16#0000#, 16);

  Zero_out1_dtc <= signed'(Zero_out1(0) & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0');

  
  Not_Equal_relop1 <= '1' WHEN preSatVoltage /= Voltage_signed ELSE
      '0';

  
  Switch_out1 <= Product1_out1 WHEN Not_Equal_relop1 = '0' ELSE
      Zero_out1_dtc;

  Add_add_cast <= resize(Switch_out1, 37);
  Add_add_cast_1 <= resize(currentControlITerm & '0' & '0' & '0' & '0', 37);
  Add_add_temp <= Add_add_cast + Add_add_cast_1;
  Add_out1 <= Add_add_temp(35 DOWNTO 4);

  
  Saturate_out1 <= to_signed(1859775393, 32) WHEN Add_out1 > to_signed(1859775393, 32) ELSE
      to_signed(-1859775393, 32) WHEN Add_out1 < to_signed(-1859775393, 32) ELSE
      Add_out1;

  Unit_Delay_process : PROCESS (clk)
  BEGIN
    IF clk'EVENT AND clk = '1' THEN
      IF reset = '1' THEN
        currentControlITerm <= to_signed(0, 32);
      ELSIF enb = '1' THEN
        currentControlITerm <= Saturate_out1;
      END IF;
    END IF;
  END PROCESS Unit_Delay_process;


  Add1_add_cast <= resize(currentControlPTerm & '0' & '0' & '0' & '0' & '0' & '0' & '0', 40);
  Add1_add_cast_1 <= resize(currentControlITerm, 40);
  Add1_add_temp <= Add1_add_cast + Add1_add_cast_1;
  preSatVoltage <= Add1_add_temp(38 DOWNTO 7);

  Voltage_signed <= signed(Voltage_1);

  Data_Type_Convert_out1 <= Voltage_signed(24 DOWNTO 9);

  Voltage <= std_logic_vector(Data_Type_Convert_out1);

END rtl;

