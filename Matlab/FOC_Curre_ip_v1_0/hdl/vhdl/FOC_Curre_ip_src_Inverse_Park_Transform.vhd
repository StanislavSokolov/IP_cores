-- -------------------------------------------------------------
-- 
-- File Name: D:\Projects\Matlab\IPcores\test\hdlsrc\hdlcoderFocCurrentFixptHdl\FOC_Curre_ip_src_Inverse_Park_Transform.vhd
-- Created: 2023-12-01 13:24:03
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FOC_Curre_ip_src_Inverse_Park_Transform
-- Source Path: hdlcoderFocCurrentFixptHdl/FOC_Current_Control/Inverse_Park_Transform
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY FOC_Curre_ip_src_Inverse_Park_Transform IS
  PORT( D                                 :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En11
        Q                                 :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En11
        Sin_Coefficient                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        Cos_Coefficient                   :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
        Alpha                             :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En10
        Beta                              :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En10
        );
END FOC_Curre_ip_src_Inverse_Park_Transform;


ARCHITECTURE rtl OF FOC_Curre_ip_src_Inverse_Park_Transform IS

  -- Signals
  SIGNAL D_signed                         : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL Cos_Coefficient_signed           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Product1_mul_temp                : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Product1_out1                    : signed(31 DOWNTO 0);  -- sfix32_En27
  SIGNAL Q_signed                         : signed(15 DOWNTO 0);  -- sfix16_En11
  SIGNAL Sin_Coefficient_signed           : signed(15 DOWNTO 0);  -- sfix16_En14
  SIGNAL Product2_mul_temp                : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Product2_out1                    : signed(31 DOWNTO 0);  -- sfix32_En27
  SIGNAL Add1_sub_cast                    : signed(32 DOWNTO 0);  -- sfix33_En27
  SIGNAL Add1_sub_cast_1                  : signed(32 DOWNTO 0);  -- sfix33_En27
  SIGNAL Add1_sub_temp                    : signed(32 DOWNTO 0);  -- sfix33_En27
  SIGNAL Add1_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10
  SIGNAL Product3_mul_temp                : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Product3_out1                    : signed(31 DOWNTO 0);  -- sfix32_En27
  SIGNAL Product4_mul_temp                : signed(31 DOWNTO 0);  -- sfix32_En25
  SIGNAL Product4_out1                    : signed(31 DOWNTO 0);  -- sfix32_En27
  SIGNAL Add2_add_cast                    : signed(32 DOWNTO 0);  -- sfix33_En27
  SIGNAL Add2_add_cast_1                  : signed(32 DOWNTO 0);  -- sfix33_En27
  SIGNAL Add2_add_temp                    : signed(32 DOWNTO 0);  -- sfix33_En27
  SIGNAL Add2_out1                        : signed(15 DOWNTO 0);  -- sfix16_En10

BEGIN
  D_signed <= signed(D);

  Cos_Coefficient_signed <= signed(Cos_Coefficient);

  Product1_mul_temp <= D_signed * Cos_Coefficient_signed;
  Product1_out1 <= Product1_mul_temp(29 DOWNTO 0) & '0' & '0';

  Q_signed <= signed(Q);

  Sin_Coefficient_signed <= signed(Sin_Coefficient);

  Product2_mul_temp <= Q_signed * Sin_Coefficient_signed;
  Product2_out1 <= Product2_mul_temp(29 DOWNTO 0) & '0' & '0';

  Add1_sub_cast <= resize(Product1_out1, 33);
  Add1_sub_cast_1 <= resize(Product2_out1, 33);
  Add1_sub_temp <= Add1_sub_cast - Add1_sub_cast_1;
  Add1_out1 <= Add1_sub_temp(32 DOWNTO 17);

  Alpha <= std_logic_vector(Add1_out1);

  Product3_mul_temp <= D_signed * Sin_Coefficient_signed;
  Product3_out1 <= Product3_mul_temp(29 DOWNTO 0) & '0' & '0';

  Product4_mul_temp <= Q_signed * Cos_Coefficient_signed;
  Product4_out1 <= Product4_mul_temp(29 DOWNTO 0) & '0' & '0';

  Add2_add_cast <= resize(Product3_out1, 33);
  Add2_add_cast_1 <= resize(Product4_out1, 33);
  Add2_add_temp <= Add2_add_cast + Add2_add_cast_1;
  Add2_out1 <= Add2_add_temp(32 DOWNTO 17);

  Beta <= std_logic_vector(Add2_out1);

END rtl;

